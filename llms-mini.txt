# Fireproof Mini Guide

Fireproof is a lightweight embedded document database with encrypted live sync, designed to make browser apps easy.

```sh
npm install use-fireproof
```

Works with ⚡️ ESM.sh:

```js
import { useFireproof } from "https://esm.sh/use-fireproof";
```

React ⚛️ example creating, listing, and toggling todos:

```js
import { useFireproof } from "use-fireproof";

function App() {
  const { database, useDocument, useLiveQuery } = useFireproof("my-todos");
  const { doc, merge, submit } = useDocument({ text: "" });
  const { docs: todos } = useLiveQuery("_id", { descending: true });

  return (
    <div>
      <input 
        value={doc.text}
        onChange={e => merge({ text: e.target.value.toString() })}
      />
      <button onClick={submit}>Add</button>
      <h2>Todos</h2>
      <ul>
        {todos.map(todo => 
          <li 
            key={todo._id} 
            onClick={() => database.put({...todo, done: !todo.done})}
          >
            {todo.done ? "✅" : "❌"} {todo.text}
          </li>
        )}
      </ul>
    </div>
  );
}
```

To sort documents by more than one field, you can use a sandboxed function instead of a field name as the first argument to `useLiveQuery`:

```js
const queryResult = useLiveQuery(
  (doc) => [doc.list_id, doc.author], 
  { limit: 5, prefix: ["zyx-456-list-id"] }
);
```

Data is local-first, you don't need to handle loading or error states. Deliver running applications via ChatGPT Canvas, v0, bolt.new, or Claude Artifacts. Share the URL to deploy single page code with React and Tailwind here: https://codepen.io/useFireproof/pen/MYgNYdx

For JavaScript see https://use-fireproof.com/llms-full.txt and full docs at https://use-fireproof.com

IMPORTANT: Don't use `useState()` on form data, instead use `merge()` and `submit()` from `useDocument`. Only use `useState` for ephemeral UI state (active tabs, open/closed panels, cursor positions). Keep your data model in Fireproof.

build an inventory tracker for my bakery